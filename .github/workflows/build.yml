name: Build CLI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            binary_suffix: ""
            asset_name: docli-linux-amd64
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
            binary_suffix: ""
            asset_name: docli-linux-arm64
          - os: windows-latest
            goos: windows
            goarch: amd64
            binary_suffix: ".exe"
            asset_name: docli-windows-amd64.exe
          - os: macos-latest
            goos: darwin
            goarch: amd64
            binary_suffix: ""
            asset_name: docli-darwin-amd64
          - os: macos-latest
            goos: darwin
            goarch: arm64
            binary_suffix: ""
            asset_name: docli-darwin-arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.1'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: go build -ldflags="-s -w" -o ${{ matrix.asset_name }}${{ matrix.binary_suffix }} .

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: ${{ matrix.asset_name }}${{ matrix.binary_suffix }}
        retention-days: 30

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Display structure of downloaded files
      run: ls -la ./artifacts/

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v2
      with:
        files: ./artifacts/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}